
# Feature Roadmap

A loose plan that is subject to change.

## v0.4 column typing, usability
- datetime conversion with auto-detect/sniffer
- secondary column sort
- add column by regex transform
- fixed-column detector

## v0.5 options management (loading/saving)
- make options an OrderedDict, with columns: option, default, sheet, help
- make sheet options override global defaults
- save/load options/command mappings (both global and per sheet--.cfg for now?)
- save sheets layout, including generated sheets and visible columns (via replay mechanism?)

## v0.6 data trail
- save sources to .zip cache
- edit/transform log
- save all sheets to .h5 file
- aggregate rows by key columns, rollup functions (mean/min/max) provided for other columns

## v0.7
- sql dbs via sqlalchemy

## v1.0
- regexes and Python expressions should be interchangeable (search, select, etc)
- generic mechanism for coloring rows
    - highlight key rows on Columns sheet same as key column

## v1.1
- connect to larger datasets (via blaze?)
- Python3 API for import by other scripts
- load new .py plugins for inputs/outputs/sheets

## v1.2

- use asyncio to do loading and computation in the background
   - progress bar and ^C to abort
- can start to browse huge and/or offline (e.g. redshift) datasets instantly

## v1.3
- bulk interface (command line, macros?)

## Unscheduled
- html table parsing into columns
- popup menus for editing enum fields
- parse .xml
- save as .json
- better csv/tsv sniffer
- easy'q'uit (for easily reproducible pages) vs sheet 'Q'uit

### Details

- create rightside statusbar for status indicators like 'g' prefix and number of sheets
- maintain original ordering with implicit/hidden line# column


