sheet	col	row	keystrokes	input	comment
			(vim)	<span class="underline">histogram.yaml</span>\n<pre>\nname: histogram\nvd: histogram.vd\npreview: poster="npt:0:00"\nquestion: How frequently are more than 10 of each item sold in a day?\n</pre>\n	Create a yaml file with tutorial metadata.
			(asciinema)	vd --play histogram.vd --delay 1.5 --replay-movement=True\n	Using <a href="https://asciinema.org/">asciinema</a>, record VisiData playing the script.  Press ^Q (Ctrl-Q) to exit VisiData when finished, and ^D (Ctrl-D) to exit the shell.·
			(bash)	wget histogram-asciicast-url.json	Download the asciicast .json for the tutorial.·
			(bash)	<a href="https://github.com/pettarin/asciicast2gif">asciicast2gif</a> asciicast.json histogram.gif --keep --server=none\n	Create (and discard) an animated .gif using <a href="https://github.com/pettarin/asciicast2gif"><pre>asciicast2gif</pre></a> with the <pre>--keep</pre> option, to keep the intermediate screenshot .png files.
			(vim)	<span class="underline">.visidatarc</span>\n<pre>\ndef moveFilesTo(paths, destdir):\n     n = 0\n     for i, p in enumerate(paths):\n         destfn = os.path.join(destdir, '%s%s' % (i+1, p.ext))\n         shutil.copyfile(p.resolve(), destfn)\n         n += 1\n     status('%s files copied' % n)\n\nDirSheet.commands += [\n     Command('gm', 'moveFilesTo([r[0] for r in selectedRows], input("move to: ")); reload()')\n     ]\n</pre>\n	Add 'gm' command to <code>.visidatarc</code>, which will move all selected files to the input folder and rename them to be sequential (1.png, 2.png, …).
			(visidata) gm	~/git/visidata/www/demo/histogram	Open the screenshots directory with VisiData. Select screenshots to showcase each distinct replay step, and use the custom <pre>gm</pre> command created earlier to move them alongside the asciicast.json.
			(bash)	python3 mkdemo.py demo.thtml histogram.yaml > histogram/index.html	Run mkdemo.py to compile the tutorial's webpage.
